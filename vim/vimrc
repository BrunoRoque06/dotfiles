set nocompatible

" Buffers
set hidden
nnoremap gb :ls<CR>:b<Space>

" Clipboard
set clipboard^=unnamed,unnamedplus

" Config
nnoremap confr :source ~/.vim/vimrc<CR>

" Explorer
let g:netrw_liststyle = 3
nnoremap <silent> <C-b> :Vex<CR>

" Files
set autoread
set path+=**
set noswapfile

" Git
nnoremap git :!lazygit<CR><CR>

" Mapping
set backspace=indent,eol,start
set ttimeoutlen=0

" Mouse
set ttymouse=xterm2
set mouse=a

" Search
set ignorecase
set incsearch
set hlsearch
set smartcase

" Splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Text
syntax enable
set encoding=utf-8
augroup markdownSpell
	autocmd!
	autocmd FileType markdown setlocal spell
	autocmd BufRead,BufNewFile *.md setlocal spell
augroup END

" UI
set cursorline
set laststatus=2
set lazyredraw
set number
set relativenumber
set scrolloff=10
set showcmd
set wildmenu

" Plugin
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync
endif

call plug#begin()
Plug 'dense-analysis/ale'
Plug 'itchyny/lightline.vim'
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-surround'
call plug#end()

" Ale
let g:ale_fix_on_save = 1

let g:ale_fixers = {}
let g:ale_fixers['*'] = ['remove_trailing_lines', 'trim_whitespace']
let g:ale_fixers.html = ['prettier']
let g:ale_fixers.javascript = ['prettier', 'eslint']
let g:ale_fixers.json = ['prettier']
let g:ale_fixers.markdown = ['prettier']
let g:ale_fixers.python = ['black']
let g:ale_fixers.sh = ['shfmt']
let g:ale_fixers.typescript = ['prettier', 'eslint']

let g:ale_linters = {}
let g:ale_linters.javascript = ['eslint']
let g:ale_linters.python = ['pylint']
let g:ale_linters.sh = ['shellcheck']
let g:ale_linters.typescript = ['eslint']

let g:ale_sign_column_always = 1
let g:ale_echo_msg_info_str = 'I'
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] [%severity%] %s'

" Theme
set background=dark
colorscheme gruvbox
highlight SpellBad cterm=underline ctermfg=DarkRed gui=underline guifg=DarkRed

" Fzf
set rtp+=/usr/local/opt/fzf
map <C-P> :FZF<CR>

" Status Bar
let g:lightline = { 'colorscheme': 'seoul256' }
set noshowmode
