function Pack() abort
	if isdirectory('~/.vim/pack/minpac')
		!mkdir -p ~/.vim/pack/minpac/opt/minpac
		!git clone https://github.com/k-takata/minpac.git ~/.vim/pack/minpac/opt/minpac
	endif

	packadd minpac

	call minpac#init()
	call minpac#add('k-takata/minpac', {'type': 'opt'})
	call minpac#add('dense-analysis/ale')
	call minpac#add('gruvbox-community/gruvbox')
	call minpac#add('itchyny/lightline.vim')
	call minpac#add('preservim/tagbar')
	call minpac#add('sheerun/vim-polyglot')
	call minpac#add('tpope/vim-commentary')
	call minpac#add('tpope/vim-repeat')
	call minpac#add('tpope/vim-surround')
	call minpac#add('vim-test/vim-test')

	call minpac#update()
	call minpac#clean()
endfunction

set autoread
set backspace=indent,eol,start
set clipboard=unnamed
set cursorline
set grepprg=rg\ --vimgrep\ --smart-case
set hidden
set hlsearch
set ignorecase
set incsearch
set mouse=a
set nocompatible
set noswapfile
set number
set path+=**
set relativenumber
set scrolloff=10
set showcmd
set smartcase
set wildmenu

let g:netrw_liststyle=1
let g:netrw_preview=1

syntax enable
set encoding=utf-8
augroup markdownSpell
	autocmd!
	autocmd FileType markdown setlocal spell
	autocmd BufRead,BufNewFile *.md setlocal spell
augroup END

" Ale
let g:ale_fix_on_save=1

let g:ale_fixers={}
let g:ale_fixers['*']=['remove_trailing_lines', 'trim_whitespace']
let g:ale_fixers.html=['prettier']
let g:ale_fixers.javascript=['prettier', 'eslint']
let g:ale_fixers.json=['prettier']
let g:ale_fixers.markdown=['prettier']
let g:ale_fixers.python=['black']
let g:ale_fixers.sh=['shfmt']
let g:ale_fixers.sql=['pgformatter']
let g:ale_fixers.typescript=['prettier', 'eslint']
let g:ale_fixers.yaml=['prettier']

let g:ale_linters={}
let g:ale_linters.javascript=['eslint']
let g:ale_linters.python=['mypy', 'pylint']
let g:ale_linters.sh=['shellcheck']
let g:ale_linters.typescript=['eslint']

let g:ale_sign_column_always=1
let g:ale_echo_msg_info_str='I'
let g:ale_echo_msg_error_str='E'
let g:ale_echo_msg_warning_str='W'
let g:ale_echo_msg_format='[%linter%] [%severity%] [%code%] %s'

" Theme
set background=dark
colorscheme gruvbox

" Fzf
set rtp+=/usr/local/opt/fzf

" Statusline
let g:lightline={
			\ 'colorscheme': 'seoul256',
			\ }
set noshowmode
set laststatus=2

nnoremap <c-j> <c-w><c-j>
nnoremap <c-k> <c-w><c-k>
nnoremap <c-l> <c-w><c-l>
nnoremap <c-h> <c-w><c-h>

nnoremap <f2> :ALENext<cr>

nnoremap <leader>b :ls<cr>:b<space>
nnoremap <leader>c :source ~/.vim/vimrc<cr>
nnoremap <leader>f :FZF<cr>
nnoremap <leader>g :silent grep<space>
" nnoremap <leader>g :!lazygit<cr><cr>
nnoremap <leader>m :marks<cr>
nnoremap <leader>s :split<cr>
nnoremap <leader>q :quit<cr>
nnoremap <leader>t :Tagbar<cr>
nnoremap <leader>v :vsplit<cr>
nnoremap <leader>x :edit .<cr>

nnoremap [q :cprevious<cr>
nnoremap ]q :cnext<cr>
