#!/usr/bin/env bash

# Antibody
alias antibody_plugins_remove='rm -rf $(antibody home)'

# Arch Linux
alias s=startx

# Bazel
alias bb='bazel build --verbose_failures'
alias bba='bazel build --verbose_failures //...'
bdeps() { bazel query 'deps('"$1"')'; }
alias br='bazel run'
alias bt='bazel test'
alias btcn='bazel test --cache_test_results=no'
alias bta='bazel test //...'

# Brew
alias brew_update='brew update; brew upgrade; brew cleanup; brew doctor'

# Commands
print_command() { ([[ -n $(declare -f "${1}") ]] && declare -f "${1}") || alias "${1}"; }

# Directories
alias ..='cd ..'
alias ll='ls -FHGal'
alias rmrf='rm -rf'

# Display
alias displays='system_profiler SPDisplaysDataType'

# Docker
alias dcb='docker-compose build --force-rm --pull --no-cache'
alias dcd='docker-compose down'
alias dcp='docker-compose pull'
alias dcu='docker-compose up --abort-on-container-exit'
alias dprune='docker stop $(docker ps -a -q); docker rm $(docker ps -a -q); docker system prune --volumes -f'
alias dps='docker ps'
alias dr='docker build -t ${PWD##*/} . ; docker run --net="host" ${PWD##*/}'
alias drmi='docker rmi -f $(docker images -a -q)'

# Files
alias c='bat --theme=1337 --style=header,grid'
file_paste() { cmd "$(pbpaste)" > "$1"; }
alias file_trim="sed -i '' 's/[[:space:]]*$//'"
file_unzip() { mkdir "${1%.*}"; tar -xvzf "$1" -C "${1%.*}"; }

# Git
alias ga='git add'
alias gaa='git add --a'
alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -D'
alias gc='git commit'
alias gcam='git commit -am'
alias gcm='git commit -m'
alias gcamend='git commit --amend --no-edit'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcp='git cherry-pick'
alias gd='git diff --color | diff-so-fancy | less -RFX'
gl() { git log --graph --abbrev-commit --decorate --format=format:"%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)" --all -"${1:-20}"; }
alias glp='git log -p'
alias gpush='git push -u origin $(git rev-parse --abbrev-ref HEAD)'
alias gpull='git pull'
alias grb='git rebase'
alias greset='git reset --hard'
alias grl='git reflog --date=iso'
alias gs='git status -u'
alias lg='lazygit'

# Golang
alias gob='go build ./...'
alias gof='gofmt -s -w .'
alias gor='go run'
alias got='go test ./...'

# Java
alias jr='java -jar'
alias jv='jar tvf'

# Mundane Life
alias cal3='cal -3'
alias caly='cal -y'
weather() { curl http://wttr.in/~"${1:-Bern}"; }

# Npm
alias nci="npm ci"
alias ni='npm install'
alias nlg='npm list -g --depth=0'
alias npm_registry='_command_with_options "npm config set registry" https://registry.npmjs.org/ https://spoudlab.jfrog.io/spoudlab/api/npm/npm/'
_command_with_options() {
  printf 'Command: %s\n' "$1"
  printf 'Options:\n'
  select OPTION in "${@:2}"; do
    if [[ -n $OPTION ]]; then
      printf "%s %s\\n" "$1" "$OPTION"
      eval "$1" "$OPTION"
      break
    else
      printf 'Invalid option.\n'
    fi
  done
}
alias nr='npm run'
alias ns="awk '/\"scripts\":/,/}/' package.json"

# Pacman
alias pacman_update='sudo pacman -Syu'
alias yay_update='yay -Syu'

# Pipelines
alias -g C='| pbcopy'
alias -g G='| grep --color=always'

# Processes
alias list_ports='lsof -PiTCP G LISTEN'
alias k9='kill -9'

# Shell Scripts
alias shell_scripts_lint='find . -not -path "./.git/*" -type f ! -name "*.*" -exec shellcheck -x {} \;'
alias shell_scripts_format='shfmt -i 2 -s -w .'

# Text
replace() { printf "%s" "${1//$2/$3}"; }
trim() { printf "%s" "$@" | tr -d '\040\011\012\015'; }
json() { printf "%s" "$1" | python -m json.tool; }
alias find_text='grep -nRHI --exclude-dir={bazel-\*,.git,node_modules} --exclude=.gitignore "" * .* | fzf'

# Tmux
alias ta='tmux attach-session -t'
alias tks='tmux kill-server'
alias tl='tmux list-sessions'
tn() { tmux new-session -s "${1:-default}"; }

# Vim
alias v='vim'
alias vim_none='vim -u NONE'
alias vim_update='vim +PlugUpgrade +PlugUpdate! +PlugClean! +qa'

# VSCode
readonly CODE_PLUGINS="$HOME/.vscode/extensions.txt"
alias code_extensions_export='code --list-extensions > $CODE_PLUGINS'
alias code_extensions_install='< $CODE_PLUGINS xargs -L 1 code --install-extension'

# Zsh
alias reload="exec zsh"
